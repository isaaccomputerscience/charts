# Default values for isaac-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""
contentRepo:
  url: git@github.com:isaaccomputerscience/isaac-content.git
  depth: 1000
  wait: 60
  liveSha: fbb01c97c3210f77b4420ed043ebbac80f7200d3
  taskPeriodSeconds: 60

isaac-app-fe:
  image:
    registry: ghcr.io
    repository: isaaccomputerscience/isaac-react-app-cs
    tag: v1.0.0
  service:
    type: ClusterIP
  containerPorts:
    http: 80
  ingress:
    enabled: false
    path: "/"
    ingressClassName: nginx
    annotations: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPU: 100
    targetMemory: 75
  resources: {}

isaac-cdn:
  image:
    registry: ghcr.io
    repository: isaaccomputerscience/isaac-cdn
    tag: v1.0.0
  service:
    type: ClusterIP
  containerPorts:
    http: 80
  ingress:
    enabled: false
    path: "/"
    ingressClassName: nginx
    annotations: {}
  resources: {}

isaac-app-renderer:
  image:
    registry: ghcr.io
    repository: isaaccomputerscience/isaac-react-app-cs-renderer
    tag: v1.0.0
  service:
    type: ClusterIP
  containerPorts:
    http: 80
  ingress:
    enabled: false
    path: "/"
    ingressClassName: nginx
    annotations: {}
  resources: {}

isaac-content-editor:
  image:
    registry: ghcr.io
    repository: isaaccomputerscience/isaac-content-editor
    tag: v1.0.0
  service:
    type: ClusterIP
  containerPorts:
    http: 80
  ingress:
    enabled: false
    path: "/"
    ingressClassName: nginx
    annotations: {}
  resources: {}

isaac-code-editor:
  image:
    registry: ghcr.io
    repository: isaaccomputerscience/isaac-code-editor
    tag: v1.0.0
  service:
    type: ClusterIP
  containerPorts:
    http: 80
  ingress:
    enabled: false
    path: "/"
    ingressClassName: nginx
    annotations: {}
  resources: {}

elastic-search:
  protocol: http
  createCert: false
  imageTag: 7.17.6
  esConfig:
    elasticsearch.yml: |
      xpack.security.enabled: false
      xpack.security.transport.ssl.enabled: false
      ingest.geoip.downloader.enabled: false
  clusterName: isaac-cs-content
  replicas: 1
  persistence:
    enabled: false
  resources: {}

api:
  name: "api"
  image:
    repository: ghcr.io/isaaccomputerscience/isaac-api
    tag: v1.0.0
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  ingress:
    enabled: false
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /isaac-api/$2
      nginx.ingress.kubernetes.io/proxy-cookie-path: /isaac-api /
    hosts: []
    tls: []
  javaOptions: "-Xmx2g"
  config:
    secretName: ""
    contentKeySecretName: ""
  prometheusExport:
    enabled: false
    path: /
    port: 9966
  service:
    type: ClusterIP
    port: 80
  deployment:
    annotations: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPU: 100
    targetMemory: 75
    scaleUp:
      stabilizationWindowSeconds: 0
    scaleDown:
      stabilizationWindowSeconds: 300
  resources: {}
  gitSync:
    resources: {}

etl:
  name: "etl"
  replicaCount: 1
  image:
    repository: ghcr.io/isaaccomputerscience/isaac-api-etl
    tag: v1.0.0
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  javaOptions: "-Xmx2g"
  config:
    secretName: ""
    contentKeySecretName: ""
  service:
    type: ClusterIP
    port: 80
  deployment:
    annotations: {}
  ingress:
    enabled: false
  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources: {}
  gitSync:
    resources: {}

eqChecker:
  name: "equality-checker"
  replicaCount: 1
  image:
    repository: ucamcldtg/equality-checker
    tag: v0.13.0
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources: {}

chemChecker:
  name: "chemistry-checker"
  replicaCount: 1
  image:
    repository: ucamcldtg/chemistry-checker
    tag: latest
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: false
  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources: {}

editorAuth:
  name: "editor-auth"
  replicaCount: 1
  image:
    repository: ghcr.io/isaaccomputerscience/isaac-editor-auth
    tag: v1.0.0
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  config: {}
  service:
    type: ClusterIP
    port: 80
  deployment:
    annotations: {}
  ingress:
    enabled: false
    className: "nginx"
    annotations: {}
    hosts: []
    tls: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources: {}

shortUrlIngress:
  name: "short-url-ingress"
  enabled: false
  className: "nginx"
  hosts: []
  tls: []
  annotations: {}
